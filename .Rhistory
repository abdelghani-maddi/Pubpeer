library(gtsummary)
df_nb_aut %>%
select(Record_ID, Gtype2, in_pubpeer) %>%
tbl_summary(
include = c(Record_ID, Gtype2, in_pubpeer),
by = is_retracted,
sort = list(everything() ~ "frequency"),
statistic = list(
all_continuous() ~ c("{N_obs}")
)
)
df_nb_aut %>%
select(Record_ID, Gtype2, in_pubpeer) %>%
tbl_summary(
include = c(Record_ID, Gtype2, in_pubpeer),
by = in_pubpeer,
sort = list(everything() ~ "frequency"),
statistic = list(
all_continuous() ~ c("{N_obs}")
)
)
df_nb_aut %>%
select(Record_ID, Gtype2, in_pubpeer) %>%
unique() %>%
tbl_summary(
include = c(Record_ID, Gtype2, in_pubpeer),
by = in_pubpeer,
sort = list(everything() ~ "frequency"),
statistic = list(
all_continuous() ~ c("{N_obs}")
)
)
df_nb_aut %>%
select(Record_ID, Gtype2, in_pubpeer) %>%
unique() %>%
tbl_summary(
include = c(Gtype2, in_pubpeer),
by = in_pubpeer,
sort = list(everything() ~ "frequency"),
statistic = list(
all_continuous() ~ c("{N_obs}")
)
)
df_nb_aut %>%
select(Record_ID, Gtype, in_pubpeer) %>%
unique() %>%
tbl_summary(
include = c(Gtype, in_pubpeer),
by = in_pubpeer,
sort = list(everything() ~ "frequency"),
statistic = list(
all_continuous() ~ c("{N_obs}")
)
)
df_nb_aut %>%
select(Record_ID, Gtype2, in_pubpeer) %>%
tbl_summary(
include = c(Gtype2, in_pubpeer),
by = in_pubpeer,
sort = list(everything() ~ "frequency"),
statistic = list(
all_continuous() ~ c("{N_obs}")
)
)
View(df_nb_aut)
df_nb_aut %>%
select(Record_ID, publication, Gtype2, in_pubpeer) %>%
unique() %>%
tbl_summary(
include = c(Gtype2, in_pubpeer),
by = in_pubpeer,
sort = list(everything() ~ "frequency"),
statistic = list(
all_continuous() ~ c("{N_obs}")
)
)
######
df <- df_retract %>%
select(publication, Gtype2, is_retracted) %>%
filter(!is.na(Gtype2)) %>%
unique()
df_retract <- read_excel("/Users/maddi/Documents/Pubpeer Gender/df_gender_retract.xlsx") ## bdd sur le genre + bdd retractations (version avril 2023)
library(tidyverse)
library(questionr)
library(RPostgres)
library(gtsummary)
library(openxlsx2)
library(gender)
library(GenderInfer)
library(openxlsx)
library(readxl)
##
df_retract <- read_excel("/Users/maddi/Documents/Pubpeer Gender/df_gender_retract.xlsx") ## bdd sur le genre + bdd retractations (version avril 2023)
######
df <- df_retract %>%
select(publication, Gtype2, is_retracted) %>%
filter(!is.na(Gtype2)) %>%
unique()
df %>%
tbl_summary(
include = c(publication, Gtype2, is_retracted),
by = is_retracted,
sort = list(everything() ~ "frequency"),
statistic = list(
all_continuous() ~ c("{N_obs}")
)
) %>%
add_overall()  %>%
# adding spanning header
modify_spanning_header(c("stat_1", "stat_2") ~ "**Is retracted**") %>%
add_p() %>%
separate_p_footnotes()
n_distinct(df$publication)
df %>% filter(is_retracted == 1) %>% n_distinct(.$publication)
View(df)
df <- df_retract %>%
select(publication, ID_retractionwatch, Gtype2, is_retracted) %>%
filter(!is.na(Gtype2)) %>%
unique()
View(df)
n_distinct(df$ID_retractionwatch)
df %>% filter(is.na(ID_retractionwatch) & is_retracted == 1)
tst <- df %>% filter(is.na(ID_retractionwatch) & is_retracted == 1)
tst <- df %>% group_by(ID_retractionwatch) %>% summarise(n = count(publication))
tst <- df %>% group_by(ID_retractionwatch) %>% summarise(n = n())
View(tst)
df <- df_retract %>%
select(publication, ID_retractionwatch, Gtype2, is_retracted) %>%
filter(!is.na(Gtype2)) %>%
unique() %>%
left_join(.,
df_nb_aut %>%
select(publication, Record_ID, Gtype, Gtype2, in_pubpeer),
by = ("Record_ID" == "ID_retractionwatch"))
df <- df_retract %>%
select(publication, ID_retractionwatch, Gtype2, is_retracted) %>%
filter(!is.na(Gtype2)) %>%
unique() %>%
left_join(.,
df_nb_aut %>%
select(publication, Record_ID, Gtype, Gtype2, in_pubpeer),
by = ("Record_ID" = "ID_retractionwatch"))
df <- df_retract %>%
select(publication, ID_retractionwatch, Gtype2, is_retracted) %>%
filter(!is.na(Gtype2)) %>%
unique() %>%
left_join(.,
df_nb_aut %>%
select(publication, Record_ID, Gtype, Gtype2, in_pubpeer),
by = ("ID_retractionwatch" = "Record_ID"))
df <- df_retract %>%
select(publication, ID_retractionwatch, Gtype2, is_retracted) %>%
filter(!is.na(Gtype2)) %>%
unique() %>%
left_join(.,
(df_nb_aut %>%
select(publication, Record_ID, Gtype, Gtype2, in_pubpeer)),
by = ("ID_retractionwatch" = "Record_ID"))
df <- df_retract %>%
select(publication, ID_retractionwatch, Gtype2, is_retracted) %>%
filter(!is.na(Gtype2)) %>%
unique() %>%
left_join(
df_nb_aut %>%
select(publication, Record_ID, Gtype, Gtype2, in_pubpeer),
by = c("ID_retractionwatch" = "Record_ID")
)
View(df)
df <- df_retract %>%
select(publication, ID_retractionwatch, Gtype2, is_retracted) %>%
filter(!is.na(Gtype2)) %>%
unique() %>%
left_join(
df_nb_aut %>%
select(publication, Record_ID, Gtype, Gtype2, in_pubpeer) %>%
filter(in_pubpee == 1),
by = c("ID_retractionwatch" = "Record_ID")
)
df <- df_retract %>%
select(publication, ID_retractionwatch, Gtype2, is_retracted) %>%
filter(!is.na(Gtype2)) %>%
unique() %>%
left_join(
df_nb_aut %>%
select(publication, Record_ID, Gtype, Gtype2, in_pubpeer) %>%
filter(in_pubpeer == 1),
by = c("ID_retractionwatch" = "Record_ID")
)
View(df)
df <- df_retract %>%
select(publication, ID_retractionwatch, Gtype2, is_retracted) %>%
filter(!is.na(Gtype2) & is_retracted == 1) %>%
unique() %>%
left_join(
df_nb_aut %>%
select(publication, Record_ID, Gtype, Gtype2, in_pubpeer) %>%
filter(in_pubpeer == 1),
by = c("ID_retractionwatch" = "Record_ID")
)
View(df)
df <- df_retract %>%
select(publication, ID_retractionwatch, Gtype2, is_retracted) %>%
filter(!is.na(Gtype2) & is_retracted == 1) %>%
unique() %>%
left_join(
df_nb_aut %>%
select(publication, Record_ID, Gtype, Gtype2, in_pubpeer) %>%
filter(in_pubpeer == 1),
by = c("ID_retractionwatch" = "Record_ID")
) %>%
unique()
View(df)
View(df_nb_aut)
View(df_retract)
ifelse(is.na(df$Gtype2.y), df$Gtype2.x, df$Gtype2.y)
df$Gtype2.y <- ifelse(is.na(df$Gtype2.y), df$Gtype2.x, df$Gtype2.y)
describe(df$Gtype2.y)
describe(df$Gtype2.x)
View(df_retract)
n_distinct(df_retract$ID_retractionwatch)
View(retract_pubpeer)
df_retract_nb_comm <- read_excel("/Users/maddi/Documents/Pubpeer Gender/retraction_data.xlsx")
retract_pubpeer <- df_retract %>%
filter(is_retracted == 1 & !is.na(Gtype2)) %>%
select(publication, ID_retractionwatch, Gtype2) %>%
unique() %>%
merge(., df_retract2, by = "publication")
View(retract_pubpeer)
describe(retract_pubpeer$is_retracted)
####################################
# Ajouter une colonne in_pubpeer
df_nb_aut <- df_nb_aut %>%
mutate(in_pubpeer = ifelse(Record_ID %in% retract_pubpeer$ID_retractionwatch, 1, 0))
verif <- df_nb_aut %>%
select(Record_ID, in_pubpeer) %>%
unique()
View(verif)
sum(verif$in_pubpeer)
####################################
# Est retractée avant qu'elle soit commentée dans Pubpeer
df <- df_nb_aut %>%
left_join(retract_pubpeer, by = c("Record_ID" = "ID_retractionwatch"))
View(df)
# Faire une jointure
df_nb_aut <- df_final
# Renommer la colonne dans df_nb_aut
colnames(df_nb_aut)[colnames(df_nb_aut) == "Record ID"] <- "Record_ID"
# Renommer la colonne dans tbfin
colnames(tbfin)[colnames(tbfin) == "Record ID"] <- "Record_ID"
# Matcher
df_nb_aut <- merge(df_nb_aut, tbfin, by.x = "Record_ID", by.y = "Record_ID", all.x = TRUE)
# Ajouter la variable "Gtype"
df_nb_aut$Gtype <- ifelse(df_nb_aut$female_part == 0 & df_nb_aut$nb_aut == 1, "Man alone",
ifelse(df_nb_aut$female_part == 1 & df_nb_aut$nb_aut == 1, "Woman alone",
ifelse(df_nb_aut$female_part == 0 & df_nb_aut$nb_aut > 1, "Collab. men only",
ifelse(df_nb_aut$female_part == 1 & df_nb_aut$nb_aut > 1, "Collab. women only",
ifelse(df_nb_aut$female_part > 0 & df_nb_aut$female_part < 1 & df_nb_aut$nb_aut ==2 & df_nb_aut$woman_leader==1, "Collab. men-women 2 auteurs",
ifelse(df_nb_aut$female_part > 0 & df_nb_aut$female_part < 1 & df_nb_aut$nb_aut > 1 & df_nb_aut$woman_leader==1, "Collab. men-women w lead",
ifelse(df_nb_aut$female_part > 0 & df_nb_aut$female_part < 1 & df_nb_aut$nb_aut > 1 & df_nb_aut$woman_leader==0, "Collab. men-women m lead", NA)
)
)
)
)
)
)
####################################
# Ajouter une autre variable sur le répartition du type de collab. H F.
##
# cela consiste à :
# dupliquer la colonne Gtype en Gtype2, en modifiant les modalités selon ces conditions :
# pour les valeurs de Gtype différentes de : ("Woman alone", "Man alone", "Collab. men only", "Collab. women only"),
# si w_corresp=1, Gtype2="Collab. men-women . w corr", si m_corresp=1, Gtype2="Collab. men-women . m corr"
# Ajouter le flag femme auteur de correspondance (proxy : 1er auteur)
df_nb_aut <- df_nb_aut %>%
mutate(w_corresp = ifelse(AuthorNumber == 1 & gender_pro_06 == "female", 1, 0))
# Ajouter le flag homme auteur de correspondance (proxy : 1er auteur)
df_nb_aut <- df_nb_aut %>%
mutate(m_corresp = ifelse(AuthorNumber == 1 & gender_pro_06 == "male", 1, 0))
##
df_nb_aut <- df_nb_aut %>%
group_by(Record_ID) %>%
mutate(w_corresp = ifelse(any(w_corresp == 1), 1, w_corresp),
m_corresp = ifelse(any(m_corresp == 1), 1, m_corresp))
##
# Ajouter la variable "Gtype"
df_nb_aut$Gtype2 <- ifelse(df_nb_aut$female_part == 0 & df_nb_aut$nb_aut == 1, "Man alone",
ifelse(df_nb_aut$female_part == 1 & df_nb_aut$nb_aut == 1, "Woman alone",
ifelse(df_nb_aut$female_part == 0 & df_nb_aut$nb_aut > 1, "Collab. men only",
ifelse(df_nb_aut$female_part == 1 & df_nb_aut$nb_aut > 1, "Collab. women only",
ifelse(df_nb_aut$female_part > 0 & df_nb_aut$female_part < 1 & df_nb_aut$nb_aut > 1 & df_nb_aut$w_corresp==1, "Collab. men-women w lead",
ifelse(df_nb_aut$female_part > 0 & df_nb_aut$female_part < 1 & df_nb_aut$nb_aut > 1 & df_nb_aut$m_corresp==1, "Collab. men-women m lead",
NA)
)
)
)
)
)
####################################
df_retract <- read_excel("/Users/maddi/Documents/Pubpeer Gender/df_gender_retract.xlsx") ## bdd sur le genre + bdd retractations (version avril 2023)
df_retract_nb_comm <- read_excel("/Users/maddi/Documents/Pubpeer Gender/retraction_data.xlsx")
retract_pubpeer <- df_retract %>%
filter(is_retracted == 1 & !is.na(Gtype2)) %>%
select(publication, ID_retractionwatch, Gtype2) %>%
unique() %>%
merge(., df_retract2, by = "publication")
# stats desc juste pour vérif
df_test <- df_final %>%
select(`Record ID`, woman_leader) %>%
unique()
# stats desc juste pour vérif
df_test <- df_final %>%
select(`Record ID`, man_leader) %>%
unique()
## Perfecto !
# Créer une nouvelle colonne gender_pro_06 en fonction des conditions
df_final$gender_pro_06 <- df_final$gender
# Assigner "initials" pour les cas où gender est NA et FirstName a un seul caractère
df_final$gender_pro_06[is.na(df_final$gender) & nchar(df_final$FirstName) == 1] <- "initials"
# Assigner "undefined" pour les cas où gender est NA et FirstName a plus d'un seul caractère
df_final$gender_pro_06[is.na(df_final$gender) & nchar(df_final$FirstName) > 1] <- "undefined"
# Assigner "unisex" pour les cas où la colonne proba de df_final < 0.6
df_final$gender_pro_06[df_final$proba < 0.6] <- "unisex"
# nagender <- df_final %>%
#   filter(is.na(gender_pro_06))
# Assigner "undefined" pour les cas où l'auteur est NA : 8 cas
df_final$gender_pro_06[is.na(df_final$gender_pro_06)] <- "undefined"
# Calcul de la proportion des femmes par publication
###
`%not_in%` <- purrr::negate(`%in%`)
tbfin <- df_final %>%
subset(., gender_pro_06 %not_in% c("initials", "unisex", "undefined")) %>%
group_by(`Record ID`) %>%
summarize(female_part = mean(gender_pro_06 == "female", na.rm = TRUE))
# Faire une jointure
df_nb_aut <- df_final
# Renommer la colonne dans df_nb_aut
colnames(df_nb_aut)[colnames(df_nb_aut) == "Record ID"] <- "Record_ID"
# Renommer la colonne dans tbfin
colnames(tbfin)[colnames(tbfin) == "Record ID"] <- "Record_ID"
# Matcher
df_nb_aut <- merge(df_nb_aut, tbfin, by.x = "Record_ID", by.y = "Record_ID", all.x = TRUE)
# Ajouter la variable "Gtype"
df_nb_aut$Gtype <- ifelse(df_nb_aut$female_part == 0 & df_nb_aut$nb_aut == 1, "Man alone",
ifelse(df_nb_aut$female_part == 1 & df_nb_aut$nb_aut == 1, "Woman alone",
ifelse(df_nb_aut$female_part == 0 & df_nb_aut$nb_aut > 1, "Collab. men only",
ifelse(df_nb_aut$female_part == 1 & df_nb_aut$nb_aut > 1, "Collab. women only",
ifelse(df_nb_aut$female_part > 0 & df_nb_aut$female_part < 1 & df_nb_aut$nb_aut ==2 & df_nb_aut$woman_leader==1, "Collab. men-women 2 auteurs",
ifelse(df_nb_aut$female_part > 0 & df_nb_aut$female_part < 1 & df_nb_aut$nb_aut > 1 & df_nb_aut$woman_leader==1, "Collab. men-women w lead",
ifelse(df_nb_aut$female_part > 0 & df_nb_aut$female_part < 1 & df_nb_aut$nb_aut > 1 & df_nb_aut$woman_leader==0, "Collab. men-women m lead", NA)
)
)
)
)
)
)
####################################
# Ajouter une autre variable sur le répartition du type de collab. H F.
##
# cela consiste à :
# dupliquer la colonne Gtype en Gtype2, en modifiant les modalités selon ces conditions :
# pour les valeurs de Gtype différentes de : ("Woman alone", "Man alone", "Collab. men only", "Collab. women only"),
# si w_corresp=1, Gtype2="Collab. men-women . w corr", si m_corresp=1, Gtype2="Collab. men-women . m corr"
# Ajouter le flag femme auteur de correspondance (proxy : 1er auteur)
df_nb_aut <- df_nb_aut %>%
mutate(w_corresp = ifelse(AuthorNumber == 1 & gender_pro_06 == "female", 1, 0))
# Ajouter le flag homme auteur de correspondance (proxy : 1er auteur)
df_nb_aut <- df_nb_aut %>%
mutate(m_corresp = ifelse(AuthorNumber == 1 & gender_pro_06 == "male", 1, 0))
##
df_nb_aut <- df_nb_aut %>%
group_by(Record_ID) %>%
mutate(w_corresp = ifelse(any(w_corresp == 1), 1, w_corresp),
m_corresp = ifelse(any(m_corresp == 1), 1, m_corresp))
##
# Ajouter la variable "Gtype"
df_nb_aut$Gtype2 <- ifelse(df_nb_aut$female_part == 0 & df_nb_aut$nb_aut == 1, "Man alone",
ifelse(df_nb_aut$female_part == 1 & df_nb_aut$nb_aut == 1, "Woman alone",
ifelse(df_nb_aut$female_part == 0 & df_nb_aut$nb_aut > 1, "Collab. men only",
ifelse(df_nb_aut$female_part == 1 & df_nb_aut$nb_aut > 1, "Collab. women only",
ifelse(df_nb_aut$female_part > 0 & df_nb_aut$female_part < 1 & df_nb_aut$nb_aut > 1 & df_nb_aut$w_corresp==1, "Collab. men-women w lead",
ifelse(df_nb_aut$female_part > 0 & df_nb_aut$female_part < 1 & df_nb_aut$nb_aut > 1 & df_nb_aut$m_corresp==1, "Collab. men-women m lead",
NA)
)
)
)
)
)
####################################
# df_retract <- read_excel("/Users/maddi/Documents/Pubpeer Gender/df_gender_retract.xlsx") ## bdd sur le genre + bdd retractations (version avril 2023)
# df_retract_nb_comm <- read_excel("/Users/maddi/Documents/Pubpeer Gender/retraction_data.xlsx")
retract_pubpeer <- df_retract %>%
filter(is_retracted == 1 & !is.na(Gtype2)) %>%
select(publication, ID_retractionwatch, Gtype2) %>%
unique() %>%
merge(., df_retract2, by = "publication")
verif <- df_nb_aut %>%
select(Record_ID, in_pubpeer) %>%
unique()
View(df_nb_aut)
####################################
# Est retractée avant qu'elle soit commentée dans Pubpeer
df <- df_nb_aut %>%
left_join(retract_pubpeer, by = c("Record_ID" = "ID_retractionwatch"))
View(df)
####################################
# Ajouter une colonne in_pubpeer
df <- df %>%
mutate(in_pubpeer = ifelse(Record_ID %in% retract_pubpeer$ID_retractionwatch, 1, 0))
View(df)
verif <- df %>%
select(Record_ID, in_pubpeer) %>%
unique()
####################################
df <- df %>%
mutate(retract_before_pubpeer = ifelse(is.na(sum_nb_com_after_retract) & is.na(sum_nb_comm) | sum_nb_com_after_retract == sum_nb_comm, 1, 0))
View(df)
##
df$Gtype3 <- ifelse(is.na(df$Gtype2.y), df$Gtype2.x, df$Gtype2.y)
View(df)
df %>%
select(Record_ID, Gtype3, in_pubpeer) %>%
unique() %>%
tbl_summary(
include = c(Gtype3, in_pubpeer),
by = in_pubpeer,
sort = list(everything() ~ "frequency"),
statistic = list(
all_continuous() ~ c("{N_obs}")
)
)
df %>%
select(Record_ID, Gtype3, in_pubpeer) %>%
filter(!is.na(.$Gtype3)) %>%
unique() %>%
tbl_summary(
include = c(Gtype3, in_pubpeer),
by = in_pubpeer,
sort = list(everything() ~ "frequency"),
statistic = list(
all_continuous() ~ c("{N_obs}")
)
)
df %>%
select(Record_ID, Gtype3, in_pubpeer) %>%
unique() %>%
filter(!is.na(.$Gtype3)) %>%
tbl_summary(
include = c(Gtype3, in_pubpeer),
by = in_pubpeer,
sort = list(everything() ~ "frequency"),
statistic = list(
all_continuous() ~ c("{N_obs}")
)
)
df %>%
select(Record_ID, Gtype3, in_pubpeer) %>%
unique() %>%
filter(!is.na(Gtype3)) %>%
tbl_summary(
include = c(Gtype3, in_pubpeer),
by = in_pubpeer,
sort = list(everything() ~ "frequency"),
statistic = list(
all_continuous() ~ c("{N_obs}")
)
)
df %>%
select(Record_ID, Gtype3, in_pubpeer) %>%
unique() %>%
filter(!is.na(Gtype3)) %>%
tbl_summary(
include = c(Gtype3, in_pubpeer),
by = in_pubpeer,
sort = list(everything() ~ "frequency"),
statistic = list(
all_continuous() ~ c("{N_obs}")
)
) %>%
add_overall(last = TRUE) #, col_label = "**Ensemble** (effectif total: {N})")
View(df_final)
View(df)
df_retract2 <- read_excel("/Users/maddi/Documents/Pubpeer Gender/df_gender_retract.xlsx") ## bdd sur le genre + bdd retractations (version avril 2023)
View(df_retract2)
# Est retractée avant qu'elle soit commentée dans Pubpeer
df <- df_nb_aut %>%
left_join(retract_pubpeer, by = c("Record_ID" = "ID_retractionwatch"))
####################################
# Ajouter une colonne in_pubpeer
df <- df %>%
mutate(in_pubpeer = ifelse(Record_ID %in% retract_pubpeer$ID_retractionwatch, 1, 0))
verif <- df %>%
select(Record_ID, in_pubpeer) %>%
unique()
####################################
df <- df %>%
mutate(retract_before_pubpeer = ifelse(is.na(sum_nb_com_after_retract) & is.na(sum_nb_comm) | sum_nb_com_after_retract == sum_nb_comm, 1, 0))
##
df$Gtype3 <- ifelse(is.na(df$Gtype2.y) & df$nb_aut>1,  df$Gtype2.y,
ifelse(is.na(df$Gtype2.y) & df$nb_aut == 1,  df$Gtype2.x))
##
df$Gtype3 <- ifelse(is.na(df$Gtype2.y) & df$nb_aut>1,  df$Gtype2.y,
ifelse(is.na(df$Gtype2.y) & df$nb_aut == 1,  df$Gtype2.x),
NA)
##
df$Gtype3 <- ifelse(is.na(df$Gtype2.y) & df$nb_aut>1,  df$Gtype2.y,
ifelse(is.na(df$Gtype2.y) & df$nb_aut == 1,  df$Gtype2.x))
##
df$Gtype3 <- ifelse(is.na(df$Gtype2.y) & df$nb_aut > 1, df$Gtype2.y,
ifelse(is.na(df$Gtype2.y) & df$nb_aut == 1, df$Gtype2.x, df$Gtype2.y))
View(df)
View(rtw)
View(df)
